<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uni.place.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="edu.uni.place.bean.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="CHAR" property="userName" />
    <result column="identification" jdbcType="CHAR" property="identification" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_birthday" jdbcType="TIMESTAMP" property="userBirthday" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="university_id" jdbcType="BIGINT" property="universityId" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="regist" jdbcType="TIMESTAMP" property="regist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, identification, user_sex, user_birthday, name, pwd, salt, university_id, 
    user_type, status, regist
  </sql>
  <select id="selectByExample" parameterType="edu.uni.place.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.place.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.place.bean.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (user_name, identification, user_sex, 
      user_birthday, name, pwd, 
      salt, university_id, user_type, 
      status, regist)
    values (#{userName,jdbcType=CHAR}, #{identification,jdbcType=CHAR}, #{userSex,jdbcType=INTEGER}, 
      #{userBirthday,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{universityId,jdbcType=BIGINT}, #{userType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{regist,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.place.bean.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="identification != null">
        identification,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="universityId != null">
        university_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="regist != null">
        regist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="identification != null">
        #{identification,jdbcType=CHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="universityId != null">
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="regist != null">
        #{regist,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.place.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=CHAR},
      </if>
      <if test="record.identification != null">
        identification = #{record.identification,jdbcType=CHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=INTEGER},
      </if>
      <if test="record.userBirthday != null">
        user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.universityId != null">
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.regist != null">
        regist = #{record.regist,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=CHAR},
      identification = #{record.identification,jdbcType=CHAR},
      user_sex = #{record.userSex,jdbcType=INTEGER},
      user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      university_id = #{record.universityId,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      regist = #{record.regist,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.place.bean.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="identification != null">
        identification = #{identification,jdbcType=CHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="universityId != null">
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="regist != null">
        regist = #{regist,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.place.bean.User">
    update user
    set user_name = #{userName,jdbcType=CHAR},
      identification = #{identification,jdbcType=CHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      university_id = #{universityId,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      regist = #{regist,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>